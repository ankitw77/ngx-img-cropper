{"version":3,"file":"bounds.js","sourceRoot":"","sources":["../../../src/model/bounds.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,IAAA;IAME,gBAAY,CAAU,EAAE,CAAU,EAAE,KAAc,EAAE,MAAe;QACjE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,GAAG,CAAC,CAAC;SACP;QACD,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,GAAG,CAAC,CAAC;SACP;QACD,EAAE,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,KAAK,GAAG,CAAC,CAAC;SACX;QACD,EAAE,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,GAAG,CAAC,CAAC;SACZ;QACD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;KAC1B;IAED,sBAAW,yBAAK;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;SAC/B;;;OAAA;IAED,sBAAW,0BAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;SAC/B;;;OAAA;IAEM,0BAAS,GAAhB;QACE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KACvE;iBAxCH;IAyCC,CAAA;AAtCD,kBAsCC","sourcesContent":["import { Point } from \"./point\";\nimport { PointPool } from \"./pointPool\";\n\nexport class Bounds {\n  public left: number;\n  public right: number;\n  public top: number;\n  public bottom: number;\n\n  constructor(x?: number, y?: number, width?: number, height?: number) {\n    if (x === void 0) {\n      x = 0;\n    }\n    if (y === void 0) {\n      y = 0;\n    }\n    if (width === void 0) {\n      width = 0;\n    }\n    if (height === void 0) {\n      height = 0;\n    }\n    this.left = x;\n    this.right = x + width;\n    this.top = y;\n    this.bottom = y + height;\n  }\n\n  public get width(): number {\n    return this.right - this.left;\n  }\n\n  public get height(): number {\n    return this.bottom - this.top;\n  }\n\n  public getCentre(): Point {\n    let w = this.width;\n    let h = this.height;\n    return PointPool.instance.borrow(this.left + w / 2, this.top + h / 2);\n  }\n}\n"]}